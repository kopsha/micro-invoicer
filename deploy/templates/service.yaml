apiVersion: v1
kind: Service
metadata:
  name: micro-invoicer
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "micro-invoicer"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-tls-ports: "443"
    service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
    service.beta.kubernetes.io/do-loadbalancer-enable-backend-keepalive: "true"

    # TODO: template ?
    # service.beta.kubernetes.io/do-loadbalancer-certificate-id: "1234-5678-9012-3456"
    service.beta.kubernetes.io/do-loadbalancer-hostname: "micro-invoicer.fibonet.ro"
    service.beta.kubernetes.io/do-loadbalancer-disable-lets-encrypt-dns-records: "false"

    # Just in case
    # service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-type: "cookies"
    # service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-name: "example"
    # service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-ttl: "60"

    service.beta.kubernetes.io/do-loadbalancer-healthcheck-port: "8000"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/healthy"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-check-interval-seconds: "8"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-response-timeout-seconds: "5"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-unhealthy-threshold: "3"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-healthy-threshold: "5"

spec:
  type: LoadBalancer
  selector:
    app: micro-invoicer
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8000
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8000

