apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: MICRO_SERVER_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
                  key: djangoSecretKey
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
                  key: dbHost
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
                  key: dbPort
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
                  key: dbName
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
                  key: dbUser
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.useEnvironment }}"
                  key: dbPassword
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ALLOWED_HOSTS
              value: "{{ .Release.Name }}-{{ .Values.useEnvironment }}.{{ .Values.useDomain }},$(POD_IP)"
          livenessProbe:
            httpGet:
              path: /healthy/
              port: http
            initialDelaySeconds: 13
            timeoutSeconds: 2
            periodSeconds: 13
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthy/
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 8
            successThreshold: 1
