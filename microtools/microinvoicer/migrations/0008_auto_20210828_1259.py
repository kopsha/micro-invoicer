# Generated by Django 3.2.6 on 2021-08-28 12:59
# Extended by Florin

from django.db.migrations.operations.special import RunPython, RunSQL
from microinvoicer import micro_use_cases as muc

from django.conf import settings
from django.db import migrations
import json


from django.db import migrations, models
import django.db.models.deletion

def import_sellers(apps, schema_editor):
    def read_data(user):
        try:
            encrypted_data = user.datastore.encode("utf-8")
            plain_data = str(settings.CRYPTO_ENGINE.decrypt(encrypted_data), "utf-8")
        except:
            print("\t >> [warning] cannot decrypt invalid user data. raw data dump:")
            print(f"{encrypted_data!r}")
            plain_data = ""

        crc = muc.to_crc32(plain_data)
        if crc != user.crc:
            print("\t >> [warning] crc check failed. did someone messed with your data?")
            print(f"\t >> [warning] computed _{crc}_ vs _{user.crc}_ stored.")

        return json.loads(plain_data)

    MicroUser = apps.get_model("microinvoicer", "MicroUser")
    FiscalEntity = apps.get_model("microinvoicer", "FiscalEntity")
    for user in MicroUser.objects.all():
        raw_data = read_data(user)
        seller = FiscalEntity(**raw_data["register"]["seller"])
        seller.save()
        user.seller = seller
        user.save()


class Migration(migrations.Migration):

    dependencies = [
        ('microinvoicer', '0007_alter_microregistry_next_invoice_no'),
    ]

    operations = [
        migrations.CreateModel(
            name='FiscalEntity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('owner_fullname', models.CharField(max_length=255)),
                ('registration_id', models.CharField(max_length=40)),
                ('fiscal_code', models.CharField(max_length=40)),
                ('address', models.TextField()),
                ('bank_account', models.CharField(max_length=40)),
                ('bank_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='microuser',
            name='seller',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='microinvoicer.fiscalentity'),
        ),
        migrations.RunPython(code=import_sellers, reverse_code=RunPython.noop)
    ]
